# You should probably do more to protect this from running. Maybe comment out or delete/move this.
name: 6 - Terraform Destroy - Service

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: terraform/tf-aws-service

jobs:
  tf_destroy:
    name: TF Destroy Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: develop - Set ENV to staging
        if: endsWith(github.event.pull_request.base.ref, '/develop') || endsWith(github.ref, '/develop')
        run: echo "ENV=staging" >> $GITHUB_ENV

      - name: main - Set ENV to prod
        if: endsWith(github.event.pull_request.base.ref, '/main') || endsWith(github.ref, '/main')
        run: echo "ENV=prod" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3

      - name: Get App Name & Target Region
        run: |
          echo "APP_NAME=$(cat ./../environments/common.tfvars.json | jq -r '.app_name')" >> $GITHUB_ENV
          echo "REGION=$(cat ./../environments/${{ env.ENV }}/config.tfvars.json | jq -r '.region')" >> $GITHUB_ENV

      - name: Copy ECS Task Release Config from S3
        run: aws s3 cp s3://${{ env.ENV }}-${{ env.APP_NAME }}-${{ env.REGION }}-configs/last-${{ env.ENV }}-build.tfvars ./

      - name: Terraform Destroy
        id: destroy
        run: make tf-destroy
        continue-on-error: true

      - name: Job Results
        run: |
          echo apply
          test ${{ steps.destroy.outputs.exitcode }} -eq 0