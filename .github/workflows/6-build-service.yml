name: 6 - Docker Build - ECS Service

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - main

defaults:
  run:
    working-directory: docker

jobs:
  build-actions:
    name: Build Docker Image - ECS Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: develop - Set ENV to staging
        if: endsWith(github.event.pull_request.base.ref, '/develop') || endsWith(github.ref, '/develop')
        run: echo "ENV=staging" >> $GITHUB_ENV

      - name: main - Set ENV to prod
        if: endsWith(github.event.pull_request.base.ref, '/main') || endsWith(github.ref, '/main')
        run: echo "ENV=prod" >> $GITHUB_ENV

      - name: Get App Name
        shell: bash
        run: echo "APP_NAME=$(cat ./../terraform/environments/${{ env.ENV }}/config.tfvars.json | jq -r '.app_name')" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker Image to ECR
        id: build-and-push
        run: make build-and-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Keep in sync with terraform/tf-aws-service/ecr.tf ecr->name - also build release file job below
          ENV: ${{ env.ENV }}-${{ env.APP_NAME }}-ecr
          IMAGE_TAG: ${{ github.sha }}

      - name: Job Results
        shell: bash
        run: |
          echo fmt
          test ${{ steps.login-ecr.outputs.exitcode }} -eq 0
          echo init
          test ${{ steps.build-and-push.outputs.exitcode }} -eq 0

      - name: Build Last Build Release File
        shell: bash
        run: |
          touch last-${{ env.ENV }}-build.tfvars
          echo 'docker_tag = "${{ github.sha }}"' >> last-${{ env.ENV }}-build.tfvars
          echo 'image_name = "${{ steps.login-ecr.outputs.registry }}/${{ env.ENV }}-${{ env.APP_NAME }}-ecr"' >> last-${{ env.ENV }}-build.tfvars

      - name: Upload Release Version Tag
        uses: actions/upload-artifact@v2
        with:
          name: last-${{ env.ENV }}-build
          path: last-${{ env.ENV }}-build.tfvars
          # 90 days is the max, if you don't release this often then change this to persist the last build somewhere.
          retention-days: 90
