name: 4 - Terraform Apply - Service

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: terraform/tf-aws-service

jobs:
  tf_apply:
    name: Terraform Apply Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: develop - Set ENV to staging
        if: endsWith(github.event.pull_request.base.ref, '/develop') || endsWith(github.ref, '/develop')
        run: echo "ENV=staging" >> $GITHUB_ENV

      - name: main - Set ENV to prod
        if: endsWith(github.event.pull_request.base.ref, '/main') || endsWith(github.ref, '/main')
        run: echo "ENV=prod" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3

      - name: Terraform Apply
        id: apply
        run: make tf-apply
        continue-on-error: true

      - name: Job Results
        run: |
          echo apply
          test ${{ steps.apply.outputs.exitcode }} -eq 0

# Uncomment and setup your webhook as a secret to send messages to your team when deploys finish
#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_MESSAGE: ${{join(steps.apply.outputs.*, '\n')}}
#          SLACK_TITLE: CI Test Suite
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}