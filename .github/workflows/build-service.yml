name: Docker Build - ECS Service

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-actions:
    name: Build Docker Image - ECS Service
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: docker

    steps:
      # Determine ENV based off the branch
      - name: develop - Set ENV to staging/demo
        if: endsWith(github.ref, '/develop')
        run: |
          echo "ENV=demo" >> $ENV

      - name: main - Set ENV to prod
        if: endsWith(github.ref, '/main')
        run: |
          echo "ENV=prod" >> $ENV

      - name: Checkout Repository
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker Image to ECR
        id: build-and-push
        run: |-
          make build-and-push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Keep in sync with terraform/tf-aws-service/ecr.tf ecr->name
          ECR_REPOSITORY: ${{ env.ENV }}-${{ env.APP_NAME }}-ecr
          IMAGE_TAG: ${{ github.sha }}

      - name: Job Results
        shell: bash
        run: |
          echo fmt
          test ${{ steps.login-ecr.outputs.exitcode }} -eq 0
          echo init
          test ${{ steps.build-and-push.outputs.exitcode }} -eq 0